<?php

namespace Tests\Unit;

use App\Models\Page;
use App\Models\Slider;
use App\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Event;
use Tests\TestCase;

class PageUnitTest extends TestCase
{
    use RefreshDatabase;


    /**
     * @test
     */
    public function authenticated_users_can_access_faq_page()
    {

        $this->actingAsAdmin();

        $response = $this->get('/page')
            ->assertOk();
    }

    private function actingAsAdmin()
    {
        $this->actingAs(factory(User::class)->create());
    }

    /**
     * @test
     */
    public function a_faq_record_can_be_added_through_a_form()
    {
        $this->withoutExceptionHandling();
        $this->actingAsAdmin();

        $response = $this->post('/store_or_update_page', [
            'page_title' => 'New Page',
            'banner_type' => 'New',
            'slide_select' => 1,
            'banner_image_alt' => 'Alt Text',
            'meta_description' => 'New Desc',
            'page_url' => 'someurl',
            'status' => 1,
            'meta_tag' => 'meta',

        ]);
        $this->assertCount(1, Page::all());
    }


    /**
     * @test
     */

    public function test_delete_faq_record()
    {
        $this->actingAsAdmin();
        $this->withoutExceptionHandling();

        $response1 = $this->post('/store_or_update_page', [
            'page_title' => 'New Page',
            'banner_type' => 'New',
            'slide_select' => 1,
            'banner_image_alt' => 'Alt Text',
            'meta_description' => 'New Desc',
            'page_url' => 'someurl',
            'status' => 1,
            'meta_tag' => 'meta',

        ]);

        $id = Page::first()->id;

        $this->callDelete($response1, $id);
    }

    private function callDelete($response1, $id)
    {
        if ($response1) {
            $response2 = $this->call('DELETE', '/page/' . $id, ['_token' => csrf_token()]);
        }
        if ($response2) {

            $this->assertCount(0, Page::all());
        }
    }

    /**
     * @test
     */

    public function test_update_faq_record()
    {
        $this->actingAsAdmin();
        $this->withoutExceptionHandling();
//insert record
        $this->post('/store_or_update_page', [
            'page_title' => 'New Page',
            'banner_type' => 'New',
            'slide_select' => 1,
            'banner_image_alt' => 'Alt Text',
            'meta_description' => 'New Desc',
            'page_url' => 'someurl',
            'status' => 1,
            'meta_tag' => 'meta',

        ]);
//update_record
        $id = Page::first()->id;
        $response = $this->post('/store_or_update_page', [
            'page_title' => 'New Page Other',
            'banner_type' => 'New 1',
            'slide_select' => 2,
            'banner_image_alt' => 'Alt Text 1',
            'meta_description' => 'New Desc 1',
            'page_url' => 'someurls',
            'status' => 3,
            'meta_tag' => 'metatag',
            'id' => $id
        ]);


        $this->assertCount(1, Page::all());

    }

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Event::fake();
    }

}
