<?php

namespace Tests\Unit;

use App\Models\Faq;
use App\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Event;
use Tests\TestCase;

class FaqUnitTest extends TestCase
{
    use RefreshDatabase;


    /**
     * @test
     */
    public function authenticated_users_can_access_faq_page()
    {

        $this->actingAsAdmin();

        $response = $this->get('/faq')
            ->assertOk();
    }

    private function actingAsAdmin()
    {
        $this->actingAs(factory(User::class)->create());
    }

    /**
     * @test
     */
    public function a_faq_record_can_be_added_through_a_form()
    {
        $this->withoutExceptionHandling();
        $this->actingAsAdmin();

        $response = $this->post('/store_or_update', [
            'faq_question' => 'Question 1',
            'faq_answer' => 'Answer',
            'status' => 1,
        ]);
        $this->assertCount(1, Faq::all());
    }


    /**
     * @test
     */
    public function a_faq_record_can_be_updated_through_a_form()
    {
        $this->withoutExceptionHandling();
        $this->actingAsAdmin();

        $response = $this->post('/store_or_update', [
            'faq_question' => 'Question 1',
            'faq_answer' => 'Answer',
            'status' => 1,
        ]);


        $this->assertCount(1, Faq::all());


    }

    /**
     * @test
     */

    public function test_delete_faq_record()
    {
        $this->actingAsAdmin();
        $this->withoutExceptionHandling();

        $this->post('/store_or_update', [
            'faq_question' => 'Question 1',
            'faq_answer' => 'Answer',
            'status' => 1,
        ]);

        $id = Faq::first()->id;

        $response = $this->call('DELETE', '/faq/' . $id, ['_token' => csrf_token()]);

        if ($response) {

            $this->assertCount(0, Faq::all());
        }
    }


    public function test_update_faq_record()
    {
        $this->actingAsAdmin();
        $this->withoutExceptionHandling();
//insert record
        $this->post('/store_or_update', [
            'faq_question' => 'Question 1',
            'faq_answer' => 'Answer',
            'status' => 1,
        ]);
//update_record
        $id = Faq::first()->id;
        $response = $this->post('/store_or_update', [
            'faq_question' => 'Question 2',
            'faq_answer' => 'Answer 2',
            'status' => 2,
            'id' => $id
        ]);


        $this->assertCount(1, Faq::all());

    }

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Event::fake();
    }


}
